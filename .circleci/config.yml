version: 2.1

executors:
  deploy_executor:
    working_directory: ~/repo
    docker:
      - image: cimg/ruby:3.0.4
        environment:
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test

  test_executor:
    working_directory: ~/repo
    docker:
      - image: cimg/ruby:3.0.4
        environment:
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          DATABASE_HOST: 127.0.0.1
      - image: cimg/postgres:13.6
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password

commands:
  install:
    description: "gem install"
    steps:
      - checkout

      # restore gem from cache
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "Gemfile.lock" }}
            - gem-cache-v1-

      # gem install
      - run:
          command: |
            gem install bundler
            bundle check --path vendor/bundle || bundle install --deployment

      - save_cache:
          key: gem-cache-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

jobs:
  test_job:
    executor: test_executor

    steps:
      - checkout

      #  gem install
      - install

      # Database setup
      - run:
          command: bundle exec rails db:create
      - run:
          command: bundle exec rails db:migrate

      - run:
          name: create directory to store test results
          command: mkdir /tmp/test-results

      # rubocop
      - run:
          name: Run rubocop
          command: bundle exec rubocop

      # run tests
      - run:
          name: RSpec
          command: |
            bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings) \
              || (printf "====== RETRYING...\n\n\n"; bundle exec rspec --only-failures)

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: /home/circleci/repo/tmp/screenshots

  deploy_job:
    executor: deploy_executor

    steps:
      - checkout

      #  gem install
      - install

      # ec2 ssh key
      - add_ssh_keys:
          fingerprints:
            - d9:a5:1b:43:0a:98:4d:c8:8d:39:d8:ee:90:82:9f:61

      # deploy to ec2
      - deploy:
          name: Capistrano deploy
          command:
            bundle exec cap production deploy

workflows:
  version: 2
  test:
    jobs:
      - test_job:
          filters:
            branches:
              ignore: main
  test_and_deploy:
    jobs:
      - test_job:
          filters:
            branches:
              only: main
      - deploy_job:
          requires:
            - test_job
          filters:
            branches:
              only: main
